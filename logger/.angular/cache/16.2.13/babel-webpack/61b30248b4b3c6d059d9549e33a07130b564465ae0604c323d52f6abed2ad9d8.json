{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../logger.service\";\nimport * as i2 from \"@angular/router\";\nexport class RandomLoggerComponent {\n  constructor(logger, router) {\n    this.logger = logger;\n    this.router = router;\n    this.logs = '';\n  }\n  logRandomMessage() {\n    const messages = ['This is a random log message.', 'Another random log message here.', 'Logging some random stuff.'];\n    const randomIndex = Math.floor(Math.random() * messages.length);\n    const randomMessage = messages[randomIndex];\n    this.logger.log(randomMessage);\n  }\n  viewLogs() {\n    this.router.navigateByUrl('/logs');\n  }\n  static #_ = this.ɵfac = function RandomLoggerComponent_Factory(t) {\n    return new (t || RandomLoggerComponent)(i0.ɵɵdirectiveInject(i1.LoggerService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RandomLoggerComponent,\n    selectors: [[\"app-random-logger\"]],\n    decls: 5,\n    vars: 0,\n    consts: [[3, \"click\"]],\n    template: function RandomLoggerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function RandomLoggerComponent_Template_button_click_1_listener() {\n          return ctx.logRandomMessage();\n        });\n        i0.ɵɵtext(2, \"Generate Random Logs\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function RandomLoggerComponent_Template_button_click_3_listener() {\n          return ctx.viewLogs();\n        });\n        i0.ɵɵtext(4, \"View Logs\");\n        i0.ɵɵelementEnd()();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["RandomLoggerComponent","constructor","logger","router","logs","logRandomMessage","messages","randomIndex","Math","floor","random","length","randomMessage","log","viewLogs","navigateByUrl","_","i0","ɵɵdirectiveInject","i1","LoggerService","i2","Router","_2","selectors","decls","vars","consts","template","RandomLoggerComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","RandomLoggerComponent_Template_button_click_1_listener","ɵɵtext","ɵɵelementEnd","RandomLoggerComponent_Template_button_click_3_listener"],"sources":["C:\\Users\\Shubhkarman Singh\\Documents\\Angular-projects\\logger\\src\\app\\random-logger\\random-logger.component.ts","C:\\Users\\Shubhkarman Singh\\Documents\\Angular-projects\\logger\\src\\app\\random-logger\\random-logger.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoggerService } from '../logger.service';\n\n@Component({\n  selector: 'app-random-logger',\n  templateUrl: './random-logger.component.html',\n  styleUrls: ['./random-logger.component.css']\n})\nexport class RandomLoggerComponent {\n  constructor(private logger: LoggerService, private router: Router) {}\n  logs: string = '';\n  logRandomMessage(): void {\n    const messages = [\n      'This is a random log message.',\n      'Another random log message here.',\n      'Logging some random stuff.'\n    ];\n    const randomIndex = Math.floor(Math.random() * messages.length);\n    const randomMessage = messages[randomIndex];\n    this.logger.log(randomMessage);\n  }\n\n  viewLogs(): void {\n    this.router.navigateByUrl('/logs');\n  }\n}","<div>\n    <button (click)=\"logRandomMessage()\">Generate Random Logs</button>\n    <button (click)=\"viewLogs()\">View Logs</button>\n  </div>\n  \n  "],"mappings":";;;AASA,OAAM,MAAOA,qBAAqB;EAChCC,YAAoBC,MAAqB,EAAUC,MAAc;IAA7C,KAAAD,MAAM,GAANA,MAAM;IAAyB,KAAAC,MAAM,GAANA,MAAM;IACzD,KAAAC,IAAI,GAAW,EAAE;EADmD;EAEpEC,gBAAgBA,CAAA;IACd,MAAMC,QAAQ,GAAG,CACf,+BAA+B,EAC/B,kCAAkC,EAClC,4BAA4B,CAC7B;IACD,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,QAAQ,CAACK,MAAM,CAAC;IAC/D,MAAMC,aAAa,GAAGN,QAAQ,CAACC,WAAW,CAAC;IAC3C,IAAI,CAACL,MAAM,CAACW,GAAG,CAACD,aAAa,CAAC;EAChC;EAEAE,QAAQA,CAAA;IACN,IAAI,CAACX,MAAM,CAACY,aAAa,CAAC,OAAO,CAAC;EACpC;EAAC,QAAAC,CAAA,G;qBAhBUhB,qBAAqB,EAAAiB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,aAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBvB,qBAAqB;IAAAwB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTlCb,EAAA,CAAAe,cAAA,UAAK;QACOf,EAAA,CAAAgB,UAAA,mBAAAC,uDAAA;UAAA,OAASH,GAAA,CAAA1B,gBAAA,EAAkB;QAAA,EAAC;QAACY,EAAA,CAAAkB,MAAA,2BAAoB;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;QAClEnB,EAAA,CAAAe,cAAA,gBAA6B;QAArBf,EAAA,CAAAgB,UAAA,mBAAAI,uDAAA;UAAA,OAASN,GAAA,CAAAjB,QAAA,EAAU;QAAA,EAAC;QAACG,EAAA,CAAAkB,MAAA,gBAAS;QAAAlB,EAAA,CAAAmB,YAAA,EAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
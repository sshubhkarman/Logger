{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./logger.service\";\nexport class SessionEndService {\n  constructor(loggerService) {\n    this.loggerService = loggerService;\n    window.addEventListener('beforeunload', () => {\n      this.loggerService.exportLogsToBackend();\n    });\n  }\n  static #_ = this.ɵfac = function SessionEndService_Factory(t) {\n    return new (t || SessionEndService)(i0.ɵɵinject(i1.LoggerService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SessionEndService,\n    factory: SessionEndService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["SessionEndService","constructor","loggerService","window","addEventListener","exportLogsToBackend","_","i0","ɵɵinject","i1","LoggerService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Shubhkarman Singh\\Documents\\Angular-projects\\logger\\src\\app\\session-end-service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { LoggerService } from './logger.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionEndService {\n  constructor(private loggerService: LoggerService) {\n    window.addEventListener('beforeunload', () => {\n      this.loggerService.exportLogsToBackend();\n    });\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,iBAAiB;EAC5BC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAC/BC,MAAM,CAACC,gBAAgB,CAAC,cAAc,EAAE,MAAK;MAC3C,IAAI,CAACF,aAAa,CAACG,mBAAmB,EAAE;IAC1C,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBALUN,iBAAiB,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAjBX,iBAAiB;IAAAY,OAAA,EAAjBZ,iBAAiB,CAAAa,IAAA;IAAAC,UAAA,EAFhB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
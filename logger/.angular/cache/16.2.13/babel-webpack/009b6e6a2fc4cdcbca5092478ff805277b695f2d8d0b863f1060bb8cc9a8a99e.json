{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class LoggerService {\n  constructor() {}\n  log(message) {\n    const timestamp = new Date().toISOString();\n    const logEntry = `${timestamp} - ${message}`;\n    const existingLogs = localStorage.getItem('appLogs');\n    const updatedLogs = existingLogs ? `${existingLogs}\\n${logEntry}` : logEntry;\n    localStorage.setItem('appLogs', updatedLogs);\n  }\n  getLogs() {\n    return localStorage.getItem('appLogs') || '';\n  }\n  static #_ = this.ɵfac = function LoggerService_Factory(t) {\n    return new (t || LoggerService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoggerService,\n    factory: LoggerService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["LoggerService","constructor","log","message","timestamp","Date","toISOString","logEntry","existingLogs","localStorage","getItem","updatedLogs","setItem","getLogs","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Shubhkarman Singh\\Documents\\Angular-projects\\logger\\src\\app\\logger.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n  constructor() {}\n\n  log(message: string): void {\n    const timestamp = new Date().toISOString();\n    const logEntry = `${timestamp} - ${message}`;\n\n    const existingLogs = localStorage.getItem('appLogs');\n    const updatedLogs = existingLogs ? `${existingLogs}\\n${logEntry}` : logEntry;\n\n    localStorage.setItem('appLogs', updatedLogs);\n  }\n\n  getLogs(): string {\n    return localStorage.getItem('appLogs') || '';\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,aAAa;EACxBC,YAAA,GAAe;EAEfC,GAAGA,CAACC,OAAe;IACjB,MAAMC,SAAS,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;IAC1C,MAAMC,QAAQ,GAAG,GAAGH,SAAS,MAAMD,OAAO,EAAE;IAE5C,MAAMK,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACpD,MAAMC,WAAW,GAAGH,YAAY,GAAG,GAAGA,YAAY,KAAKD,QAAQ,EAAE,GAAGA,QAAQ;IAE5EE,YAAY,CAACG,OAAO,CAAC,SAAS,EAAED,WAAW,CAAC;EAC9C;EAEAE,OAAOA,CAAA;IACL,OAAOJ,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,EAAE;EAC9C;EAAC,QAAAI,CAAA,G;qBAfUd,aAAa;EAAA;EAAA,QAAAe,EAAA,G;WAAbf,aAAa;IAAAgB,OAAA,EAAbhB,aAAa,CAAAiB,IAAA;IAAAC,UAAA,EAFZ;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
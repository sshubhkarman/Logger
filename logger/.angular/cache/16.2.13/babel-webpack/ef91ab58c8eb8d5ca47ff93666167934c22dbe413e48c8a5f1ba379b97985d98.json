{"ast":null,"code":"import { LoggingLevels } from './logging-levels.enum';\nimport * as i0 from \"@angular/core\";\nexport class LoggerService {\n  constructor() {\n    //\n  }\n  logInfo(message) {\n    this.log(message, LoggingLevels.Info);\n  }\n  // --------------------------------------\n  logWarning(message) {\n    this.log(message, LoggingLevels.Warning);\n  }\n  // -------------------------------------------\n  logError(message) {\n    this.log(message, LoggingLevels.Error);\n  }\n  // ------------------------------------------\n  log(message, level) {\n    const timestamp = new Date().toISOString();\n    const logEntry = `${timestamp} - [${level}] - ${message}`;\n    const existingLogsString = localStorage.getItem('appLogs');\n    let existingLogs = [];\n    if (existingLogsString) {\n      existingLogs = JSON.parse(existingLogsString);\n    }\n    existingLogs.push(logEntry);\n    localStorage.setItem('appLogs', JSON.stringify(existingLogs));\n  }\n  // --------------------------------------------\n  getLogs() {\n    const existingLogsString = localStorage.getItem('appLogs');\n    if (existingLogsString) {\n      return JSON.parse(existingLogsString);\n    }\n    return [];\n  }\n  static #_ = this.ɵfac = function LoggerService_Factory(t) {\n    return new (t || LoggerService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoggerService,\n    factory: LoggerService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["LoggingLevels","LoggerService","constructor","logInfo","message","log","Info","logWarning","Warning","logError","Error","level","timestamp","Date","toISOString","logEntry","existingLogsString","localStorage","getItem","existingLogs","JSON","parse","push","setItem","stringify","getLogs","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Shubhkarman Singh\\Documents\\Angular-projects\\logger\\src\\app\\logger.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { LoggingLevels } from './logging-levels.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LoggerService {\n\n  constructor() {\n    //\n  }\n\n  logInfo(message: string): void {\n    this.log(message, LoggingLevels.Info);\n  }\n// --------------------------------------\n  logWarning(message: string): void {\n    this.log(message, LoggingLevels.Warning);\n  }\n// -------------------------------------------\n  logError(message: string): void {\n    this.log(message, LoggingLevels.Error);\n  }\n// ------------------------------------------\n  private log(message: string, level: LoggingLevels): void {\n    const timestamp = new Date().toISOString();\n    const logEntry = `${timestamp} - [${level}] - ${message}`;\n\n    const existingLogsString = localStorage.getItem('appLogs');\n    let existingLogs: string[] = [];\n\n    if (existingLogsString) {\n      existingLogs = JSON.parse(existingLogsString);\n    }\n\n    existingLogs.push(logEntry);\n    localStorage.setItem('appLogs', JSON.stringify(existingLogs));\n  }\n// --------------------------------------------\n  getLogs(): string[] {\n    const existingLogsString = localStorage.getItem('appLogs');\n    if (existingLogsString) {\n      return JSON.parse(existingLogsString);\n    }\n\n    return [];\n  }\n}\n"],"mappings":"AACA,SAASA,aAAa,QAAQ,uBAAuB;;AAMrD,OAAM,MAAOC,aAAa;EAExBC,YAAA;IACE;EAAA;EAGFC,OAAOA,CAACC,OAAe;IACrB,IAAI,CAACC,GAAG,CAACD,OAAO,EAAEJ,aAAa,CAACM,IAAI,CAAC;EACvC;EACF;EACEC,UAAUA,CAACH,OAAe;IACxB,IAAI,CAACC,GAAG,CAACD,OAAO,EAAEJ,aAAa,CAACQ,OAAO,CAAC;EAC1C;EACF;EACEC,QAAQA,CAACL,OAAe;IACtB,IAAI,CAACC,GAAG,CAACD,OAAO,EAAEJ,aAAa,CAACU,KAAK,CAAC;EACxC;EACF;EACUL,GAAGA,CAACD,OAAe,EAAEO,KAAoB;IAC/C,MAAMC,SAAS,GAAG,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE;IAC1C,MAAMC,QAAQ,GAAG,GAAGH,SAAS,OAAOD,KAAK,OAAOP,OAAO,EAAE;IAEzD,MAAMY,kBAAkB,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAC1D,IAAIC,YAAY,GAAa,EAAE;IAE/B,IAAIH,kBAAkB,EAAE;MACtBG,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACL,kBAAkB,CAAC;;IAG/CG,YAAY,CAACG,IAAI,CAACP,QAAQ,CAAC;IAC3BE,YAAY,CAACM,OAAO,CAAC,SAAS,EAAEH,IAAI,CAACI,SAAS,CAACL,YAAY,CAAC,CAAC;EAC/D;EACF;EACEM,OAAOA,CAAA;IACL,MAAMT,kBAAkB,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IAC1D,IAAIF,kBAAkB,EAAE;MACtB,OAAOI,IAAI,CAACC,KAAK,CAACL,kBAAkB,CAAC;;IAGvC,OAAO,EAAE;EACX;EAAC,QAAAU,CAAA,G;qBAxCUzB,aAAa;EAAA;EAAA,QAAA0B,EAAA,G;WAAb1B,aAAa;IAAA2B,OAAA,EAAb3B,aAAa,CAAA4B,IAAA;IAAAC,UAAA,EAHZ;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}